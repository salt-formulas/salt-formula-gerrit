{%- from "gerrit/map.jinja" import server with context %}
# This file is managed by salt.

[gerrit]
	basePath = git
	canonicalWebUrl = {{ server.canonical_web_url }}
    {%- if server.git_http_url is defined %}
	gitHttpUrl = {{ server.git_http_url }}
    {%- endif %} 
    {%- if server.canonical_git_url is defined %}
	canonicalGitUrl = {{ server.canonical_git_url }}
    {%- endif %}

[database]
	type = {{ server.database.engine }}
	hostname = {{ server.database.host }}
	database = {{ server.database.name }}
	username = {{ server.database.user }}
	connectionpool = true

[auth]
    {%- if server.get('contributor_agreement', False) %}
	contributorAgreements = true
    {%- endif %}
	type = {{ server.auth.engine }}
	cookieSecure = true
	enableRunAs = true
    {%- if server.auth.engine == 'OPENID_SSO' %}
	openIdSsoUrl = {{ server.auth.openid_sso_url }}
    {%- endif %}

[sendemail]
	smtpServer = {{ server.mail.host }}
	from = {{ server.mail.from }}
	includeDiff = {{ server.mail.include_diff }}

[container]
	user = gerrit2
    {% if server.java_home is defined %}
	javaHome = {{ server.java_home }}
    {% endif %}
    {% if server.container_javaoptions is defined %}
    vaOptions = {{ server.container_javaoptions }}
    {% endif %}
    {% if server.container_heaplimit is defined %}
	heapLimit = {{ server.container_heaplimit }}
    {% endif %}

[sshd]
	listenAddress = {{ server.bind.address }}
	{% if server.sshd_threads is defined %}
	threads = {{ server.sshd_threads }}
	{% endif %}
	{% if server.sshd_idle_timeout is defined %}
	idleTimeout = {{ server.sshd_idle_timeout }}
	{% endif %}
	{% if server.sshd_max_connections_per_user is defined %}
	maxConnectionsPerUser = {{ server.sshd_max_connections_per_user }}
	{% endif %}
	{% if server.sshd_batch_threads is defined %}
	batchThreads = {{ server.sshd_batch_threads }}
	{% endif %}

[httpd]
	listenUrl = proxy-https://*:8082/
    {% if server.httpd_maxwait is defined %}
	maxWait = {{ server.httpd_maxwait }}
    {% endif %}
    {% if server.httpd_acceptorthreads is defined %}
	acceptorThreads = {{ server.httpd_acceptorthreads }}
	{% endif %}
	{% if server.httpd_minthreads is defined %}
	minThreads = {{ server.httpd_minthreads }}
	{% endif %}
	{% if server.httpd_maxthreads is defined %}
	maxThreads = {{ server.httpd_maxthreads }}
	{% endif %}
	{% if server.httpd_maxqueued is defined %}
	maxQueued = {{ server.httpd_maxqueued }}
	{% endif %}

[cache]
	directory = cache

[cache "web_sessions"]
	maxAge = 7days

{% if server.cache_diff_timeout is defined %}

[cache "diff"]
    timeout = {{ server.cache_diff_timeout }}

{% endif %}

{% if server.cache_diff_intraline_timeout is defined %}

[cache "diff_intraline"]
    timeout = {{ server.cache_diff_intraline_timeout }}

{% endif %}

[user]
	email = {{ server.email }}

[change]
	allowDrafts = {{ server.get('allow_drafts', True) }}

[receive]
    {% if server.receive_max_object_size_limit is defined %}
	maxObjectSizeLimit = {{ server.receive_max_object_size_limit }}
    {% endif %}

{%- for commentlink_name, commentlink in server.get('commentlink', {}).iteritems() %}

[commentlink "{{ commentlink_name }}"]
	match = "{{ commentlink['match'] }}"
    {% if commentlink['link'] is defined %}
	link = "{{ commentlink['link'] }}"
    {% endif %}
    {% if commentlink['html'] is defined %}
	html = "{{ commentlink['html'] }}"
    {% endif %}

{% endfor %}

{%- for plugin_name, plugin in server.get('plugin', {}).iteritems() %}

[{{ plugin_name }}]
	url = {{ plugin.url }}

{% endfor %}

[theme]
	backgroundColor = ffffff
	topMenuColor = ffffff
	textColor = 264d69
	trimColor = eef3f5
	selectionColor = d1e6ea
	changeTableOutdatedColor = f5cccc
	tableOddRowColor = ffffff
	tableEvenRowColor = f5f5ff

{% if server.melody is defined %}

[melody]
	monitoring = {{ server.melody.monitoring }}
	session = {{ server.melody.session }}

[plugin "javamelody"]
    allowTopMenu = {{ server.enable_javamelody_top_menu }}

{% endif %}

{% if server.ui is defined %}

[gitweb]
    {% if server.ui.engine == 'gitweb' %}
	revision = "?p=${project}.git;a=commitdiff;h=${commit}"
    {% else %}
	type = cgit
    {% endif %}
    {% if server.ui.repo_url is defined %}
	url = "{{ server.ui.web_repo_url }}"
	urlEncode = {{ server.ui.web_repo_url_encode }}
    {% endif %}

{% endif %}

{% if server.contactstore is defined %}

[contactstore]
	appsec = {{ server.contactstore.appsec }}
	url = {{ server.contactstore.url }}

{% endif %}

{% if server.secondary_index is defined %}

[index]
	type = {{ server.secondary_index.type }}
    {% if server.index_threads > 1 %}
	threads = {{ server.index_threads }}
    {% endif %}

{% endif %}

[groups]
    newGroupsVisibleToAll = {{ server.get('new_groups_visible_to_all', False) }}

[mimetype "image/*"]
    safe = true

[mimetype "text/x-yaml"]
    safe = true

[mimetype "text/xml"]
    safe = true

[mimetype "application/xml"]
    safe = true

[mimetype "text/x-rst"]
    safe = true

[mimetype "text/plain"]
    safe = true

[mimetype "text/x-puppet"]
    safe = true

[mimetype "text/x-ini"]
    safe = true

[mimetype "text/x-properties"]
    safe = true

[mimetype "text/x-markdown"]
    safe = true

[mimetype "text/css"]
    safe = true
